@page "/registroPrioridades"
@page "/registroPrioridades/{IdPrioridad:int}"

@inject PrioridadesBLL  PrioridadesBLL
@inject NavigationManager NavigationManager

<h1>Registro de Prioridades</h1>

@*Mensaje de error*@
@if (!string.IsNullOrWhiteSpace(Mensaje))
{
    <div class="alert alert-danger">@Mensaje</div>
}
@*Inicio del formulario*@
<EditForm model="Prioridad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro</h3>
            </div>
            <div class=card-body>

                @*Prioridad Id*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label>Id Prioridad</label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="prioridades.IdPrioridad" class="form-control" aria-describedby="BotonBuscar"/>
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="BotonBuscar"><i class="oi oi-magnifying-glass" /></button>
                    </div>
                </div>
                @*Descripcion de Prioridades*@
                <div class="mb-3">
                    <label class="form-label" for="Descripcion">Descripcion:</label>
                    <InputTextArea @bind-Value="prioridades.Descripcion" class="form-control" ></InputTextArea>
                    <ValidationMessage For="@(()=>prioridades.Descripcion)" />
                </div>
                @*Dias de Compromiso*@
                <div class="mb-3">
                    <label class="form-label" for="DiasCompromiso">Dias de compromiso:</label>
                    <InputNumber @bind-Value="prioridades.DiasCompromiso" class="form-control" ></InputNumber>
                    <ValidationMessage For="@(()=>prioridades.DiasCompromiso)" />
                </div>

            </div>
            @*Conjunto de Botones*@
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo <i class="oi oi-file" /></button>
                    <button type="submit" class="btn btn-outline-success">Guardar <i class="oi oi-document" /></button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar <i class="oi oi-trash" /></button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int IdPrioridad{ get; set; }
    public string Mensaje { get; set; } = "";
    public Prioridades prioridades { get; set; } = new Prioridades();

    protected override void OnInitialized()
    {
        if (IdPrioridad > 0)
        {
            this.prioridades.IdPrioridad = IdPrioridad;
            this.Buscar();
        }
    }

    public void Buscar()
    {
        var prioridadEncontrada = PrioridadesBLL.Buscar(prioridades.IdPrioridad);
        if(prioridadEncontrada != null)
        {
            this.prioridades = prioridadEncontrada;
        }
    }

    public void Nuevo()
    {
        this.prioridades = new Prioridades();
    }

    public void Repetido()
    {
        if (!Validar())
        {
            return;
        }
        if(prioridades.Descripcion == prioridades.Descripcion)
        {
            this.Eliminar();
        }
    }

    public void Guardar()
    {
        if(string.IsNullOrWhiteSpace(prioridades.Descripcion))
        {
            Mensaje = "Es obligatorio que se rellenen todos los campos";
            return;
        }

        if (!Validar())
        {
            return;
        }

        if (PrioridadesBLL.Guardar(this.prioridades))
        {
            this.Nuevo();
            
        }
        NavigationManager.NavigateTo("/registroPrioridades");
    }

    public bool Validar()
    {
        return prioridades.Descripcion != null && prioridades.DiasCompromiso > 0 && prioridades.DiasCompromiso <= 32;
    }

    public void Eliminar()
    {
        Buscar();
        if (PrioridadesBLL.Eliminar(this.prioridades))
        {
            this.Nuevo();
        }
        NavigationManager.NavigateTo("/registroPrioridades");
    }
}